---
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  class?: string;
  sizes?: string;
  priority?: boolean;
}

const { 
  src, 
  alt, 
  width, 
  height, 
  loading = 'lazy', 
  class: className = '', 
  sizes = '(max-width: 768px) 100vw, 50vw',
  priority = false 
} = Astro.props;

// Generate WebP version path
const webpSrc = src.replace(/\.(jpg|jpeg|png)$/i, '.webp');

// For critical images (above fold), use eager loading
const imageLoading = priority ? 'eager' : loading;
---

<picture class={className}>
  <!-- WebP format for modern browsers -->
  <source srcset={webpSrc} type="image/webp" sizes={sizes} />
  
  <!-- Fallback to original format -->
  <img 
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={imageLoading}
    decoding="async"
    sizes={sizes}
    style="aspect-ratio: auto;"
  />
</picture>

<style>
  picture {
    display: block;
  }
  
  img {
    max-width: 100%;
    height: auto;
    border-radius: inherit;
    transition: opacity 0.3s ease;
  }
  
  /* Fade in effect for lazy loaded images */
  img[loading="lazy"] {
    opacity: 0;
    animation: fadeIn 0.3s ease forwards;
  }
  
  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }
  
  /* Prevent layout shift during loading */
  img[width][height] {
    aspect-ratio: attr(width) / attr(height);
  }
</style>